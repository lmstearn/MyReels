; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#define MyAppName "MyReelsSys"
#define MyParentAppName "MyReels"
#define MyAppVersion "3.1"
#define MyAppPublisher "Stearn & DisAssoc"
#define MySetupDir "B:\games\"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
PrivilegesRequired=admin
AppId={{EF309E25-F688-4318-A762-26BA6A91C977}
;setting a default name for app: https://stackoverflow.com/questions/3618257/is-it-possible-to-accept-custom-command-line-parameters-with-inno-setup
AppName={param:lnch|{#MyAppName}}
VersionInfoDescription={#MyAppName}
VersionInfoProductName={#MyAppName}
AppVersion={#MyAppVersion}
AppMutex=20b70e57-1c2e-4de9-99e5-20f3961e6812
OutputDir={#MySetupDir}{#MyParentAppName}\Installer
OutputBaseFilename=Setup{#MyAppName}
DefaultDirName={code:GetUserMyAppDir|Param}
Compression=lzma
SolidCompression=yes
SetupIconFile=CaveMantizardum.ico
ShowLanguageDialog=no
DisableWelcomePage=yes
DisableDirPage=yes
DisableProgramGroupPage=yes
UsePreviousAppDir=No

[Files]
Source: "VclStylesinno.dll"; DestDir: "{app}"; Flags: dontcopy
Source: "SapphireKamri.vsf"; DestDir: "{app}"; Flags: dontcopy


; (Note: Scroll to the right to see the full lines!)
; begin VB system files: https://docs.microsoft.com/en-us/dotnet/visual-basic/reference/vb6-support
;Source: "MSVCRT40.DLL"; DestDir: "{sys}"
;All shipped with 2KSP3- Vista, Server 2003 and on- runasadmin so no noregerror- but...
;Leave the following 6 (vb6sp6): http://www.vbforums.com/showthread.php?848499-Inno-Setup-for-VB-System-Files&p=5176497
Source: "vbsysfiles\asycfilt.dll"; DestDir: "{sys}"; Flags: onlyifdoesntexist uninsneveruninstall sharedfile; OnlyBelowVersion: 0,6.0.6000
Source: "vbsysfiles\comcat.dll"; DestDir: "{sys}"; Flags: onlyifdoesntexist uninsneveruninstall sharedfile regserver noregerror; OnlyBelowVersion: 0,6.0.6000
Source: "vbsysfiles\msvbvm60.dll"; DestDir: "{sys}"; Flags: onlyifdoesntexist uninsneveruninstall sharedfile regserver noregerror; OnlyBelowVersion: 0,6.0.6000
Source: "vbsysfiles\oleaut32.dll"; DestDir: "{sys}"; Flags: onlyifdoesntexist uninsneveruninstall sharedfile regserver noregerror; OnlyBelowVersion: 0,6.0.6000
Source: "vbsysfiles\olepro32.dll"; DestDir: "{sys}"; Flags: onlyifdoesntexist uninsneveruninstall sharedfile regserver noregerror; OnlyBelowVersion: 0,6.0.6000
Source: "vbsysfiles\stdole2.tlb"; DestDir: "{sys}"; Flags: onlyifdoesntexist uninsneveruninstall sharedfile regtypelib noregerror; OnlyBelowVersion: 0,6.0.6000
;Leave the following 2 (as above)
Source: "vbsysfiles\vbajet32.dll"; DestDir: "{sys}"; Flags: onlyifdoesntexist uninsneveruninstall sharedfile; OnlyBelowVersion: 0,6.0.6000
Source: "vbsysfiles\expsrv.dll"; DestDir: "{sys}"; Flags: onlyifdoesntexist uninsneveruninstall sharedfile; OnlyBelowVersion: 0,6.0.6000
; end VB system files

; NOTE: Don't use "Flags: ignoreversion" on any shared system files
; The recommended restartreplace flag has no effect on Windows NT platforms if the user does not have administrative privileges so this should
; Shouldn't make any difference for XP and onwards.


;Supported runtime files to distribute with your application: restartreplace omitted for both.
Source: "ComCtl32.ocx"; DestDir: "{sys}"; Flags: regserver sharedfile restartreplace noregerror
Source: "Comdlg32.ocx"; DestDir: "{sys}"; Flags: regserver sharedfile restartreplace noregerror

;;;;;
;; Mystery file dependency: not needed? http://www.vbforums.com/showthread.php?848529-Vb5db-dll-Vb6
;Source: "VB5DB.DLL"; DestDir: "{sys}"; Flags: restartreplace sharedfile
;;;;
;;Unsupported, but supported and compatible updates or upgrades are available
Source: "Dao350.dll"; DestDir: "{dao}"; Flags: restartreplace regserver sharedfile noregerror
Source: "Msjet35.dll"; DestDir: "{sys}"; Flags: restartreplace
Source: "Msjter35.dll"; DestDir: "{sys}"; Flags: restartreplace
Source: "Msjint35.dll"; DestDir: "{sys}"; Flags: restartreplace
Source: "Msrepl35.dll"; DestDir: "{sys}"; Flags: restartreplace
Source: "Msrd2x35.dll"; DestDir: "{sys}"; Flags: restartreplace regserver noregerror



Source: "ActCndy2.ocx"; DestDir: "{sys}"; Flags: restartreplace regserver sharedfile noregerror
Source: "TabCtl32.ocx"; DestDir: "{sys}"; Flags: restartreplace regserver sharedfile noregerror
Source: "SHELLLNK.TLB"; DestDir: "{sys}"; Flags: restartreplace sharedfile regtypelib noregerror
Source: "TEGSPIN3.OCX"; DestDir: "{sys}"; Flags: restartreplace regserver sharedfile noregerror

[Messages]
FinishedLabelNoIcons={#MyParentAppName} system files installed!
UninstalledAll={#MyParentAppName} system files uninstalled!

[Code]
// Import the LoadVCLStyle function from VclStylesInno.DLL
procedure LoadVCLStyle(VClStyleFile: String); external 'LoadVCLStyleW@files:VclStylesInno.dll stdcall';
// Import the UnLoadVCLStyles function from VclStylesInno.DLL
procedure UnLoadVCLStyles; external 'UnLoadVCLStyles@files:VclStylesInno.dll stdcall';
const
   PreviousSysID = 'EF309E25-F688-4318-A762-26BA6A91C977';
   // MyReelsSys SID
   PreviousAppID = '7FE3CDE1-00A9-491F-B856-E3A121405B49';
   // The MyReels SID

   UninstallPathApp = 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{' + PreviousAppID + '}_is1';

   UninstallPathSys = 'Software\Microsoft\Windows\CurrentVersion\Uninstall\{' + PreviousSysID + '}_is1';
   // Some posts have 'InstallDir', but never observed that
   InstallKey    = 'InstallLocation';



function InitializeUninstall(): Boolean;
begin
  Result := True;
  //MsgBox: ('Debugging Param: ' + ExpandConstant('{param:lnch|{#MyAppName}}') + '!', mbError, MB_OK);
    if (ExpandConstant('{param:lnch|{#MyAppName}}') <> 'lnchParent') And (RegKeyExists(HKCU, ExpandConstant('SOFTWARE\{#MyAppPublisher}\{#MyParentAppName}'))) then
    //if (UninstallSilent = False) And (RegKeyExists(HKCU, ExpandConstant('SOFTWARE\{#MyAppPublisher}\{#MyParentAppName}'))) then
    begin
    if MsgBox('This should not be uninstalled if ' + ExpandConstant('{#MyParentAppName}') + ' is installed for this user. Continue anyway?', mbConfirmation, MB_YESNO) = IDNO Then
    Abort;
    // take care it does not continues with prompt to continue or no!
    end;
end;
//The following HAS to be in or the above condition in Initialise doesn't work for some reason!
procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
 case CurUninstallStep of
   usUninstall:
   begin
     if (ExpandConstant('{param:lnch|{#MyAppName}}') <> 'lnchParent') And (RegKeyExists(HKCU, ExpandConstant('SOFTWARE\{#MyAppPublisher}\{#MyParentAppName}'))) then
     //if (UninstallSilent = False) And (RegKeyExists(HKCU, ExpandConstant('SOFTWARE\{#MyAppPublisher}\{#MyParentAppName}'))) then
       begin
         //if MsgBox('This should not be uninstalled if ' + ExpandConstant('{#MyParentAppName}') + ' is installed for this user. Continue anyway?', mbConfirmation, MB_YESNO) = IDNO Then Abort;
       end;
   end;
   end;
end;
procedure CurPageChanged(CurPageID: Integer);
begin
  if (CurPageId = wpReady) then
    begin
    WizardForm.Caption := ExpandConstant('{#MyParentAppName}') + ' Sys files';
    WizardForm.ReadyLabel.Caption := 'Ready to install ' + ExpandConstant('{#MyParentAppName}') + ' system files!';
    end;
  if CurPageID = wpFinished then
    begin
    WizardForm.Caption := ExpandConstant('{#MyParentAppName}') + ' Sys files';
    end;
end;
function InitializeSetup: Boolean;
begin
  Result := True;
  ExtractTemporaryFile('SapphireKamri.vsf');
  LoadVCLStyle(ExpandConstant('{tmp}\SapphireKamri.vsf'));
    if NOT RegKeyExists(HKCU, ExpandConstant('SOFTWARE\{#MyAppPublisher}\{#MyParentAppName}')) then
    begin
    if MsgBox(ExpandConstant('{#MyParentAppName}') + ' does not appear to be installed. Continue?', mbConfirmation, MB_YESNO) = IDNO Then
    Result := False;
    end;
  end;
//for styles
procedure DeinitializeSetup();
begin
  UnLoadVCLStyles;
end;


function GetDefaultDir( Param: String ) : String;
var
   UserSIDs: TArrayOfString;
   I:        Integer;

begin
   // Check if the current user installed it
   if (RegQueryStringValue( HKEY_CURRENT_USER, UninstallPathApp, InstallKey, Result)) Or (RegQueryStringValue(HKEY_CURRENT_USER, UninstallPathSys, InstallKey, Result)) then

   // Current user didn't install it.  Did someone else?
   else if RegGetSubkeyNames( HKEY_USERS, '', UserSIDs ) then begin
      for I := 0 to GetArrayLength( UserSIDs ) - 1 do begin
         if (RegQueryStringValue( HKEY_USERS, UserSIDs[I] + '\' + UninstallPathApp, InstallKey, Result)) Or (RegQueryStringValue(HKEY_USERS, UserSIDs[I] + '\' + UninstallPathSys, InstallKey, Result)) then break;
      end;  
   end;

   // Not installed per-user
   if Result = '' then begin
      // What about installed for the machine?
      if (RegQueryStringValue(HKEY_LOCAL_MACHINE, UninstallPathApp, InstallKey, Result)) Or (RegQueryStringValue(HKEY_LOCAL_MACHINE, UninstallPathSys, InstallKey, Result)) then

      // Doesn't appear to be installed, as admin default to Program Files
      else if IsAdminLoggedOn() then begin
         Result := ExpandConstant('{pf}\') + ExpandConstant('{#MyParentAppName}');

      // As non-admin, default to Local Application Data
      end else begin
         Result := ExpandConstant('{localappdata}\') + ExpandConstant('{#MyParentAppName}');
      end;
   end;
end;


function GetUserMyAppDir(Param: String): String;
var
temp: String;
begin
temp:= ExpandConstant('{param:{#MyParentAppName}Dir|nothingYet}');
If temp = 'nothingYet' then temp:= GetDefaultDir(Param);
Result:= temp;
end;